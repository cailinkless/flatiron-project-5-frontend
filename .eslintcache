[{"/Users/cailinkless/Desktop/playbill-client/src/index.js":"1","/Users/cailinkless/Desktop/playbill-client/src/App.js":"2","/Users/cailinkless/Desktop/playbill-client/src/reducers/index.js":"3","/Users/cailinkless/Desktop/playbill-client/src/components/TopLogo.js":"4","/Users/cailinkless/Desktop/playbill-client/src/views/NewPlaybill.js":"5","/Users/cailinkless/Desktop/playbill-client/src/views/ShowPlaybill.js":"6","/Users/cailinkless/Desktop/playbill-client/src/views/EditPlaybill.js":"7","/Users/cailinkless/Desktop/playbill-client/src/reducers/playbillReducer.js":"8","/Users/cailinkless/Desktop/playbill-client/src/components/PlaybillTemplate.js":"9","/Users/cailinkless/Desktop/playbill-client/src/actions/playbills.js":"10","/Users/cailinkless/Desktop/playbill-client/src/reducers/creditReducer.js":"11","/Users/cailinkless/Desktop/playbill-client/src/actions/credits.js":"12","/Users/cailinkless/Desktop/playbill-client/src/containers/credits/CreditsIndex.js":"13","/Users/cailinkless/Desktop/playbill-client/src/containers/credits/CreditForm.js":"14","/Users/cailinkless/Desktop/playbill-client/src/containers/playbills/PlaybillsIndex.js":"15","/Users/cailinkless/Desktop/playbill-client/src/containers/playbills/PlaybillEditForm.js":"16","/Users/cailinkless/Desktop/playbill-client/src/containers/playbills/PlaybillForm.js":"17","/Users/cailinkless/Desktop/playbill-client/src/containers/credits/CreditEditForm.js":"18","/Users/cailinkless/Desktop/playbill-client/src/views/NewCredit.js":"19","/Users/cailinkless/Desktop/playbill-client/src/views/Home.js":"20","/Users/cailinkless/Desktop/playbill-client/src/components/NavBar.js":"21","/Users/cailinkless/Desktop/playbill-client/src/views/EditCredit.js":"22","/Users/cailinkless/Desktop/playbill-client/src/components/EditMe.js":"23","/Users/cailinkless/Desktop/playbill-client/src/components/PreviewMe.js":"24","/Users/cailinkless/Desktop/playbill-client/src/views/ShowCredit.js":"25","/Users/cailinkless/Desktop/playbill-client/src/components/CreditTemplate.js":"26"},{"size":945,"mtime":1613070244806,"results":"27","hashOfConfig":"28"},{"size":2007,"mtime":1613143761217,"results":"29","hashOfConfig":"28"},{"size":250,"mtime":1613143597945,"results":"30","hashOfConfig":"28"},{"size":540,"mtime":1612980689000,"results":"31","hashOfConfig":"28"},{"size":358,"mtime":1612995506317,"results":"32","hashOfConfig":"28"},{"size":1032,"mtime":1613113878472,"results":"33","hashOfConfig":"28"},{"size":1403,"mtime":1613140917331,"results":"34","hashOfConfig":"28"},{"size":4274,"mtime":1613140648977,"results":"35","hashOfConfig":"28"},{"size":2194,"mtime":1613095777271,"results":"36","hashOfConfig":"28"},{"size":4780,"mtime":1613111610224,"results":"37","hashOfConfig":"28"},{"size":1388,"mtime":1613143581624,"results":"38","hashOfConfig":"28"},{"size":0,"mtime":1613143348006,"results":"39","hashOfConfig":"28"},{"size":1791,"mtime":1613143893402,"results":"40","hashOfConfig":"28"},{"size":3630,"mtime":1613112846879,"results":"41","hashOfConfig":"28"},{"size":1462,"mtime":1613081321712,"results":"42","hashOfConfig":"28"},{"size":1811,"mtime":1613113979223,"results":"43","hashOfConfig":"28"},{"size":1812,"mtime":1612980689000,"results":"44","hashOfConfig":"28"},{"size":3273,"mtime":1613143385173,"results":"45","hashOfConfig":"28"},{"size":994,"mtime":1613099690174,"results":"46","hashOfConfig":"28"},{"size":237,"mtime":1613068148430,"results":"47","hashOfConfig":"28"},{"size":798,"mtime":1613080487715,"results":"48","hashOfConfig":"28"},{"size":1019,"mtime":1613143543257,"results":"49","hashOfConfig":"28"},{"size":523,"mtime":1612980689000,"results":"50","hashOfConfig":"28"},{"size":512,"mtime":1612980689000,"results":"51","hashOfConfig":"28"},{"size":1475,"mtime":1613144174612,"results":"52","hashOfConfig":"28"},{"size":673,"mtime":1612991592703,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"uqq09c",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/cailinkless/Desktop/playbill-client/src/index.js",[],["109","110"],"/Users/cailinkless/Desktop/playbill-client/src/App.js",[],"/Users/cailinkless/Desktop/playbill-client/src/reducers/index.js",[],"/Users/cailinkless/Desktop/playbill-client/src/components/TopLogo.js",[],"/Users/cailinkless/Desktop/playbill-client/src/views/NewPlaybill.js",[],"/Users/cailinkless/Desktop/playbill-client/src/views/ShowPlaybill.js",[],"/Users/cailinkless/Desktop/playbill-client/src/views/EditPlaybill.js",[],"/Users/cailinkless/Desktop/playbill-client/src/reducers/playbillReducer.js",["111","112"],"const playbillReducer = (state={playbills: [], loading: false}, action) => {\n\n    switch(action.type) {\n        case \"LOADING_PLAYBILLS\":\n            return {\n                ...state,\n                loading: true\n            }\n\n        case \"PLAYBILLS_LOADED\":\n            return {\n                ...state,\n                playbills: action.payload,\n                loading:false\n            }\n\n        case \"ADD_PLAYBILL\":\n            return {\n                ...state,\n                loading: true\n            }\n            \n        case \"PLAYBILL_ADDED\":\n            return {\n                ...state,\n                playbills: [...state.playbills, action.payload],\n                loading: false\n            }\n\n        case \"DELETE_PLAYBILL\":\n            return {\n                ...state,\n                loading: true\n            }\n\n        case \"PLAYBILL_DELETED\":\n            return {\n                ...state,\n                playbills: [...state.playbills.filter(pb => pb.id !== parseInt(action.payload))],\n                loading: false\n            }\n\n        case \"UPDATE_PLAYBILL\":\n            return {\n                ...state,\n                loading: true\n            }\n\n        case \"PLAYBILL_UPDATED\":\n            debugger\n            return {\n                ...state,\n                playbills: [...state.playbills.filter(pb => pb.id !== action.payload.id), action.payload],\n                loading: false\n            }\n\n        case \"ADD_CREDIT\":\n            return {\n                ...state,\n                loading: true\n                }\n                    \n        case \"CREDIT_ADDED\":\n                const playbillsPlusCredit = state.playbills.map(playbill => {\n                if (playbill.id === action.payload.playbill.playbill_id) {\n                    return {\n                        ...playbill,\n                        credits: [...playbill.credits, action.payload]\n                    }\n                } else {\n                    return playbill\n                }\n            })\n            return {\n                ...state,\n                playbills: playbillsPlusCredit,\n                loading: false\n            }\n\n        case \"DELETE_CREDIT\":\n            return {\n                ...state,\n                loading: true\n            }\n\n        case \"CREDIT_DELETED\":\n            const playbillsMinusCredit = state.playbills.map(pb => {\n                return {\n                    ...pb,\n                    credits: [...pb.credits.filter(c => c.id != action.payload)]\n                }\n            })\n            return {\n               ...state,\n               playbills: playbillsMinusCredit,\n               loading: false \n            }\n\n        case \"UPDATE_CREDIT\":\n            return {\n                ...state,\n                loading: true\n            }\n\n        case \"CREDIT_UPDATED\":\n            const updatedPlaybills = state.playbills.map(playbill => {\n                if (playbill.id === action.payload.playbill.playbill_id) {\n                    return {\n                        ...playbill,\n                        credits: [...playbill.credits.filter(c => c.id != action.payload.id), action.payload]\n                    }\n                } else {\n                    return playbill\n                }\n            })\n            debugger\n            return {\n                ...state,\n                playbills: updatedPlaybills,\n                loading: false\n            }\n        \n        // case \"CREDIT_ADDED\":\n        //     // playbill\n        //     debugger\n        //     return {\n        //         ...state,\n        //         playbills: [...state.playbills.filter(pb => pb.id !== action.payload.id), action.payload], // assumes payload of \"playbill\"\n        //         loading: false\n        //     }\n\n                // case \"UPDATE_CREDIT\":\n        //     return {\n        //         ...state,\n        //         c_loading: true\n        //     }\n    \n        // case \"CREDIT_UPDATED\":\n        //     return {\n        //         ...state,\n        //         credits: [...state.credits.filter(c => c.id !== action.payload.id), action.payload],\n        //         c_loading: false\n        //     }\n            \n        default: \n            return state\n    }\n\n}\n\nexport default playbillReducer;","/Users/cailinkless/Desktop/playbill-client/src/components/PlaybillTemplate.js",[],"/Users/cailinkless/Desktop/playbill-client/src/actions/playbills.js",[],"/Users/cailinkless/Desktop/playbill-client/src/reducers/creditReducer.js",[],"/Users/cailinkless/Desktop/playbill-client/src/actions/credits.js",[],"/Users/cailinkless/Desktop/playbill-client/src/containers/credits/CreditsIndex.js",[],"/Users/cailinkless/Desktop/playbill-client/src/containers/credits/CreditForm.js",["113"],"import React, { Component } from 'react' // allows for a component class\n// import { addCredit } from '../../actions/credits' \n// grabs the addCredit action\nimport { connect } from 'react-redux' // allows access to redux global state / dispatch\nimport { withRouter } from 'react-router-dom';\n// import { addCredit } from '../../actions/credits';\nimport { addCredit } from '../../actions/playbills';\n// import { addPlaybillCredit } from '../../actions/playbills';\n\nimport { Redirect } from 'react-router';\n\nclass CreditForm extends Component {\n\n    // Set initial local state\n    state={ \n        credit: {\n            name: \"\",\n            role: \"\",\n            bio: \"\",\n            cast: \"\",\n            playbill_id: this.props.playbillId // assigns credit to the current playbill (must be passed in by parent)\n        },\n        loading: false\n    }\n\n    // Allow local state to keep track of user inputs\n    handleOnChange = e => { // takes in change event\n        this.setState({...this.state, // starts with current state\n            credit: {\n                ...this.state.credit, // starts with current credit\n                [e.target.name]: e.target.value, // makes assigned changes to current credit\n            }\n        })\n    }\n\n    // Create new credit in the API and add it to global state\n    handleOnSubmit = e => { // takes in the submit event\n        e.preventDefault() // prevents submitting to a nonexistant backend\n\n        //Change radio input's string value into a boolean\n        if (this.state.credit.cast === \"true\") {\n            this.setState({...this.state,\n                credit: {\n                    ...this.state.credit,\n                    cast: true\n                }\n            })\n        }\n\n        const credit = {...this.state.credit} // save local state into variable\n        this.props.addCredit(credit, this.props.playbillId) // action call\n        \n        this.setState({ // clears local state (and by extension form) for new input\n            credit: {\n                name: \"\",\n                role: \"\",\n                bio: \"\",\n                cast: \"\",\n                playbill_id: this.props.playbillId\n            }\n        })\n        alert(\"Credit Saved!\")\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Cast / Crew Member Details:</h2>\n                <form onSubmit={this.handleOnSubmit}>\n                    <label>Name:</label>\n                    <input name=\"name\" type=\"text\" value={this.state.credit.name} onChange={this.handleOnChange}/>\n                    <br/><br/>\n                    <label>Category:</label>\n                    <input name=\"cast\" type=\"radio\" value=\"true\" onChange={this.handleOnChange}></input>\n                    <label for=\"cast\">Cast</label>\n                    <input name=\"cast\" type=\"radio\" value=\"false\" onChange={this.handleOnChange}></input>\n                    <label for=\"cast\">Crew (includes writer, director, etc...)</label>\n                    <br/><br/>\n                    <label>Role:</label>\n                    <input name=\"role\" type=\"text\" value={this.state.credit.role} onChange={this.handleOnChange}/>\n                    <br/><br/>\n                    <label>Bio:</label>\n                    <br/>\n                    <textarea name=\"bio\" type=\"textarea\" value={this.state.credit.bio} onChange={this.handleOnChange}/>\n                    <br/><br/>\n                    <button type=\"submit\">Add This Credit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(connect(null, { addCredit })(CreditForm)) // connects addCredit action to CreditForm","/Users/cailinkless/Desktop/playbill-client/src/containers/playbills/PlaybillsIndex.js",[],"/Users/cailinkless/Desktop/playbill-client/src/containers/playbills/PlaybillEditForm.js",[],"/Users/cailinkless/Desktop/playbill-client/src/containers/playbills/PlaybillForm.js",[],"/Users/cailinkless/Desktop/playbill-client/src/containers/credits/CreditEditForm.js",[],"/Users/cailinkless/Desktop/playbill-client/src/views/NewCredit.js",[],"/Users/cailinkless/Desktop/playbill-client/src/views/Home.js",[],"/Users/cailinkless/Desktop/playbill-client/src/components/NavBar.js",[],"/Users/cailinkless/Desktop/playbill-client/src/views/EditCredit.js",[],"/Users/cailinkless/Desktop/playbill-client/src/components/EditMe.js",[],"/Users/cailinkless/Desktop/playbill-client/src/components/PreviewMe.js",[],"/Users/cailinkless/Desktop/playbill-client/src/views/ShowCredit.js",[],"/Users/cailinkless/Desktop/playbill-client/src/components/CreditTemplate.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":90,"column":62,"nodeType":"120","messageId":"121","endLine":90,"endColumn":64},{"ruleId":"118","severity":1,"message":"119","line":110,"column":72,"nodeType":"120","messageId":"121","endLine":110,"endColumn":74},{"ruleId":"122","severity":1,"message":"123","line":10,"column":10,"nodeType":"124","messageId":"125","endLine":10,"endColumn":18},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]